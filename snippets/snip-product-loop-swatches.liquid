{% for option in product.options %}

  {%- liquid
    assign option_handle = option | handle
    assign option_index = forloop.index0

    assign values = ''

    assign swatch_count = 0
    assign show_sizes = false
    if settings.show_collection_sizes
      assign show_sizes = true
    endif

    assign color_swatch_options = settings.swatch_option_names | replace: ' ,', ',' | replace: ', ', ',' | split: ',' | downcase
  -%}

  {% capture downcased_option %}{{ option | downcase }}{% endcapture %}
  {% if color_swatch_options contains downcased_option %}

  <div class="product-loop__swatch-wrapper swatch-style--{{ settings.color_swatch_shape }} a-left sm-hide{% if show_sizes %} mb1{% endif %}">
    <ul data-option-index="{{ option_index }}" class="product-loop__swatch-options {{ option_handle }}">
      {% for variant in product.variants %}
        {%- liquid
              assign variant_image_url = blank
              if variant.image
                assign variant_image_url =  variant.image | image_url: width: 100
              endif
              assign value = variant.options[option_index]
          -%}
        {% capture wrapped_value %},{{ value }},{% endcapture %}
        {% unless values contains wrapped_value %}
        {%- assign swatch_count = swatch_count | plus: 1 -%}
        <li data-option-title="{{ value | escape }}" class="product-loop__swatch color {{ value | handle }}">
          <a title="{{ value | escape }}" href="{{ variant.url | within: collection }}" tabindex="-1">
            {% liquid
              assign swatch_img = null
              assign swatch_color_name = value | handle | append: '.png'
              assign css_color = value | split: ' ' | last | handle
              if value.swatch.color and color_swatch_style == 'swatch'
                assign css_color = value.swatch.color
              endif
              assign swatch_image_url = nil
              if value.swatch.image
                assign swatch_image_url = value.swatch.image | image_url: width: 50
              endif

              if images[swatch_color_name] != blank
                assign swatch_img = swatch_color_name | file_url
              endif

            %}
            <span 
              data-swatch-color="{{ value | handleize }}" 
              style="background-color: {{ css_color }}; {% unless color_swatch_style == 'default-color' %}background-image: url({% if color_swatch_style == 'custom-image' and swatch_img != null %}{{ swatch_img }}{% elsif color_swatch_style == 'variant-image' %}{{ variant_image_url }}{% elsif color_swatch_style == 'swatch' %}{{ swatch_image_url }}{% endif %}); background-size: 50px;{% endunless %}">
            </span>
          </a>
        </li>
        {% capture values %}{{ values }}{{ wrapped_value }}{% endcapture %}
        {% endunless %}
      {% endfor %}
    </ul>
  </div><!-- .swatch -->

  <p class="sm a-left lg-hide md-hide" style="color: var(--text-color-light);">{{ swatch_count }} Color(s) Available</p>
  {% endif %}
{% endfor %}
